chunk = 1024
wf = wave.open("music.wav", "rb")

p = pyaudio.PyAudio()
stream = p.open(format=p.get_format_from_width(wf.getsampwidth()),
                channels=wf.getnchannels(),
                rate=wf.getframerate(),
                output=True)

def get_volume(data):
    count = len(data) // 2
    fmt = "%dh" % count
    shorts = struct.unpack(fmt, data)
    np_shorts = np.array(shorts, dtype=np.int16)
    rms = np.sqrt(np.mean(np_shorts**2))
    volume = min(100, rms / 300)
    return volume

data = wf.readframes(chunk)
while data:
    stream.write(data)

    volume = get_volume(data)

    pwm_red.ChangeDutyCycle(volume if volume > 30 else 0)
    pwm_green.ChangeDutyCycle(100 - volume if volume > 30 else 0)
    pwm_blue.ChangeDutyCycle(volume / 2)
    pwm_yellow.ChangeDutyCycle(volume / 1.5)
    pwm_white.ChangeDutyCycle(volume)

    data = wf.readframes(chunk)

stream.stop_stream()
stream.close()
p.terminate()

for pwm in [pwm_red, pwm_green, pwm_blue, pwm_yellow, pwm_white]:
    pwm.stop()
GPIO.cleanup()
