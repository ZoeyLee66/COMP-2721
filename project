import time
import numpy as np
import librosa
import pygame
from gpiozero import LED


red_led = LED(2)
yellow_led = LED(3)
blue_led = LED(4)
green_led = LED(17)
white_led = LED(27)


audio_file = "bb.wav" 
y, sr = librosa.load(audio_file, sr=None)

tempo, beat_frames = librosa.beat.beat_track(y=y, sr=sr)

if isinstance(tempo, np.ndarray):
    tempo_val = float(tempo[0])
else:
    tempo_val = float(tempo)

print(f"Detected BPM: {tempo_val:.2f}")

if tempo_val <= 90:

    led_sequence = [green_led, blue_led]
elif tempo_val >= 120:
    led_sequence = [red_led, yellow_led]
else:

    led_sequence = [red_led, green_led, blue_led, yellow_led, white_led]

sleep_time = 60.0 / tempo_val * 1.0

if sleep_time < 0.2:
    sleep_time = 0.2
elif sleep_time > 2.0:
    sleep_time = 3.0
else:
    sleep_time = 1.0

pygame.mixer.init(frequency=sr)
pygame.mixer.music.load(audio_file)


red_led.off()
yellow_led.off()
blue_led.off()
green_led.off()
white_led.off()


pygame.mixer.music.play()
print("start")

while pygame.mixer.music.get_busy():

    for led in led_sequence:

        red_led.off()
        yellow_led.off()
        blue_led.off()
        green_led.off()
        white_led.off()

        led.on()
        time.sleep(sleep_time)

        if not pygame.mixer.music.get_busy():
            break

pygame.mixer.music.stop()
red_led.off()
yellow_led.off()
blue_led.off()
green_led.off()
white_led.off()

print("end")
